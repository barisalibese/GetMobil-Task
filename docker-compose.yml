version: "4.19"
services:
  nginx:
    container_name: nginx
    build: ./docker/nginx
    command: nginx -g "daemon off;"
    networks:
      - internal
    ports:
      - "8087:80"
    volumes:
      - ./logs/nginx:/var/log/nginx
      - ./src/backend:/var/www/html/backend
  php:
    container_name: php
    build: ./docker/php
    networks:
      - internal
    ports:
      - "9001:9000"
    volumes:
      - ./src/backend:/var/www/html/backend
    working_dir: /var/www/html/backend
  frontend:
    container_name: frontend
    build: ./src/frontend
    networks:
      - internal
    ports:
    - "3000:3000"
    volumes:
    - ./src/frontend:/var/www/html/frontend
    - /var/www/html/frontend/.node_modules
    - /var/www/html/frontend/.next
    working_dir: /var/www/html/frontend
  composer:
    container_name: composer
    image: composer/composer
    volumes:
      - ./src/backend:/var/www/html/backend
    working_dir: /var/www/html/backend
    command: install
  mysql:
    image: mysql:8.0.27
    container_name: mysql
    platform: linux/amd64
    networks:
      - internal
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: GetMobil
      MYSQL_USER: GetMobil
      MYSQL_PASSWORD: 123456
    ports:
      - "3307:3306"
    volumes:
      - ./database/backend:/var/lib/mysql
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: pma
    networks:
      - internal
    links:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    restart: always
    ports:
      - 8085:80
networks:
  internal:
    driver: bridge